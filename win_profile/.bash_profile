# generated by Git for Windows
test -f ~/.profile && . ~/.profile
test -f ~/.bashrc && . ~/.bashrc
git config --global --list|grep core.eol

echo "===============C:/Users/panac/.bash_profile========="

function tt () {
    echo "test"
}

# bash_profile 리로드
function reload () {
  # clear
  source "C:/Users/panac/.bash_profile"
  echo "bash_profile Reloaded!!!"
} 

# 데일리 오픈
function dl () {

  # 오늘 일자로 데일리 열기
  #  /usr/bin/open -a "/Applications/Google Chrome.app" "https://bitbucket.tmon.co.kr/bitbucket/projects/FRT/repos/daily/browse/UI%EA%B0%9C%EB%B0%9C%EC%9C%A0%EB%8B%9B%EA%B3%BC%EC%BD%94%EC%96%B4UI%EA%B0%9C%EB%B0%9C%EC%A7%80%EC%9B%90%EC%9C%A0%EB%8B%9B/$(date '+%Y%m')/$(date '+%Y%m%d').md?useDefaultHandler=true"

  # 월요일이면 확인하여 지난주 금요일 데일리 열기
  # 오늘 요일 받아오기
  toDay=$(date '+%A')

  # 비교할 요일 지정
  tarDay="월요일"

  # 오늘이 월요일이면 지난주 금요일, 그외 요일은 어제 일자를 받기 위한 변수
  time=""

  # 오늘 요일과 지정한 요일(월요일)을 비교
  if [ "$toDay" == "$tarDay" ];then
    # 오늘 = 월요일 이면 63 을 변수에 담음 이는 리눅스 일자 계산 함수로 15를 어제일로 계산 하루 추가시 24를 더해야함
    # 3일을 뒤로 가려면 15 어제 + 1일 24 + 1일 24 = 63
    time=63
    echo "오늘과 지난주 금요일 데일리 열기."
    else
    # 그외 요일은 15로 어제로 돌리면 됨
    time=15
    echo "오늘과 어제 데일리 열기"
  fi
    # time 변수에 지정한 일로 데일리 열기
    # /usr/bin/open -a "/Applications/Google Chrome.app" "https://bitbucket.tmon.co.kr/bitbucket/projects/FRT/repos/daily/browse/UI%EA%B0%9C%EB%B0%9C%EC%9C%A0%EB%8B%9B%EA%B3%BC%EC%BD%94%EC%96%B4UI%EA%B0%9C%EB%B0%9C%EC%A7%80%EC%9B%90%EC%9C%A0%EB%8B%9B/$(TZ=KST+$time date +%Y%m)/$(TZ=KST+$time date +%Y%m%d).md?useDefaultHandler=true"
    # echo "김영득" | clip
}






function allpr () {

  branch_list=("home" "atstore" "order" "checkout" "benefit" "paymentbenefit" "cs" "deallist" "mart" "deals_v3" "mall" "point" "tour" "search" "member" "interest" "plan" "schedule" "seller" "shared" "keyword" "tips" "auth" "delivery_my" "review" "category" "mediaprofile" "media" "delivery" "outlet" "store")

  # footer_pr 목록
  # branch_list=("home" "tips" "atstore" "benefit" "paymentbenefit" "checkout" "order" "deallist" "mart" "mall" "seller" "plan" "point" "tour" "search" "member" "deals_v3" "keyword" "interest" "cs" "schedule" "shared")

  # 터미널 경로에 브런치명을 불러올것이 있다면 변수에 저장
  branch_name=$(git rev-parse --abbrev-ref HEAD)

  # 터미널 경로상 브런치가 없다면 입력 받도록 함
  if [ -n "$branch_name" ]; then
    echo "$branch_name 대상으로 전체서비스 PR 생성합니다."
  else
    echo "브런치 번호를 입력하세요 형식 : feature/SDUFM-00"
    read branch_name
    echo -e "입력하신 브런치는 $branch_name -> 대상으로 전체서비스 PR 생성합니다."
  fi

  for (( i = 0 ; i < ${#branch_list[@]} ; i++ )) ; do
      start C:/Users/panac/AppData/Local/Google/Chrome/Application/chrome.exe "https://bitbucket.tmon.co.kr/bitbucket/projects/SDUUI/repos/fe/pull-requests?create&targetBranch=refs/heads/${branch_list[$i]}-qa&sourceBranch=refs/heads/$branch_name"
      echo "${branch_list[$i]}-qa : "
  done
  # release 마지막에 추가
  # start C:/Users/panac/AppData/Local/Google/Chrome/Application/chrome.exe "https://bitbucket.tmon.co.kr/bitbucket/projects/SDUUI/repos/fe/pull-requests?create&targetBranch=refs/heads/release&sourceBranch=refs/heads/$branch_name"

}

# 터미널
alias re='reload'
alias ..='cd ..'
alias ...='cd ../..'
alias .3='cd ../../..'
alias .4='cd ../../../..'
alias .5='cd ../../../../..'

alias cl='clear'
alias c='clear'
alias ~='cd /'
alias lcp='pwd; pwd | clip'

# alias desk='cd ~/Desktop'
alias op='start .'
# alias f='open -a Finder ./'

alias gog='cd f:/work'
alias godw='cd d:/download'
alias gofe='cd f:/work/fe/tmon'
alias gosun='cd f:/work/fe_build/panach'
alias goco='cd f:/work/fe/tmon_recruit/pc'
alias gobe='cd f:/work/service_tmon_benefit_ui/src/main/webapp/'
alias godm='cd f:/work/markup_dm'
alias goam='cd f:/work/development_static_resource'
alias gome='cd f:/work/service_tmon_media_ui/src/main/webapp/src'

# 지라 관련
alias sun='start C:/Users/panac/AppData/Local/Google/Chrome/Application/chrome.exe "http://sun.tmonc.net/view/994.FE/job/FE_BUILD/ws/"'
alias dl='start C:/Users/panac/AppData/Local/Google/Chrome/Application/chrome.exe "https://bitbucket.tmon.co.kr/bitbucket/projects/FRT/repos/daily/browse/UI%EA%B0%9C%EB%B0%9C%EC%9C%A0%EB%8B%9B%EA%B3%BC%EC%BD%94%EC%96%B4UI%EA%B0%9C%EB%B0%9C%EC%A7%80%EC%9B%90%EC%9C%A0%EB%8B%9B/$(date '+%Y%m')/$(date '+%Y%m%d').md?useDefaultHandler=true"'

# GIT
alias gr="git checkout release"
alias gs="git status"
alias gp2="git pull origin release"
alias gp="git pull"
alias ck="git checkout -b $1"
alias ck2="git checkout -b feature/SDUFM-$1"
alias ns="npm start"
alias gnoadd="git update-index --no-assume-unchanged $1"
alias gnoaddreset="git update-index --really-refresh"
alias greset="git reset --hard HEAD"
alias ga="git add ."
alias gc="git commit -m $1"
alias gps="git push origin $1"
alias vv="node -v;npm -v"


# diff
alias d2h="diff2html -s side -- -m HEAD~1"

# npm / etc
alias ns="npm start"
alias vsbash="start 'C:/Users/panac/AppData/Local/Programs/Microsoft VS Code/Code.exe' 'C:/Users/panac/.bash_profile'"


# 참조
# http://blog.naver.com/PostList.nhn?blogId=jed00